CA 00 00 00 00 CB 00 00 00 00 CC CF C9 EE 00 00
00 CF D1 D3 01 FE C2 D2 39 00 00 00 D4 EC FF 00
mov ebx [eip+1] & eip+5
mov edx [eip+1] & eip+5
mov eax [input+edx]  //input  CC
xor ebx eax  CF
mov eax [eip+1] & eip+5  C9
xor ebx eax   CF
cmp ebx [enc+edx] if(=) ecx=1 if(>) ecx=2 if(<) ecx=0
cmp ecx 1 if(=) this->_eip1 = this->_eip1 + *(this->_eip1 + 1) + 2 else this->_eip1 +=2
return 0 if(!=)(eip+2) 
edx++ if(=)(eip+3) 
cmp edx [eip+1] if(=) ecx=1 if(>) ecx=2 if(<) ecx=0 eip+5 //[eip+1]=39
cmp ecx 0 if(=) this->_eip1 = this->_eip1 + *(this->_eip1 + 1) + 2 else this->_eip1 +=2
to the CC if(=)
return 1 if(!=)

int enc[57]={0xBE,0x36,0xAC,0x27,0x99,0x4F,0xDE,0x44,0xEE,0x5F,0xDA,0x0B,0xB5,0x17,0xB8,0x68,0xC2,0x4E,0x9C,0x4A,0xE1,0x43,0xF0,0x22,0x8A,0x3B,0x88,0x5B,0xE5,0x54,0xFF,0x68,0xD5,0x67,0xD4,0x06,0xAD,0x0B,0xD8,0x50,0xF9,0x58,0xE0,0x6F,0xC5,0x4A,0xFD,0x2F,0x84,0x36,0x85,0x52,0xFB,0x73,0xD7,0x0D,0xE3}

int ebx = 0;
for(int i=0,i<57,i++){

    ebx^= input[i]; 
    ebx^= 0xEE;
    if(ebx==enc[i]){
        continue;
    }
    else{
        return 0;
    }
}
return 1;